{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1036{\fonttbl{\f0\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green255\blue0;\red0\green176\blue80;\red0\green128\blue0;\red0\green77\blue187;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\highlight1\strike\f0\fs22 PART1 (enonces_date_tab)\par
\cf2\highlight0 1. Ecrire une fonction getAge qui prend en param\'e8tre une date de naissance au format "YYYY-MM-DD"\par
et qui retourne l'\'e2ge de la personne en ann\'e9es.\par
\par
2. Ecrire une fonction getMax qui prend en param\'e8tre un tableau d'entiers\par
et qui retourne le plus grand \'e9l\'e9ment du tableau.\par
\par
3. Ecrire une fonction getAges qui prend en param\'e8tre un tableau de dates de naissance\par
au format "YYYY-MM-DD" et qui retourne un tableau contenant l'\'e2ge de chaque personne en ann\'e9es.\par
\par
4. Ecrire une fonction getDaysUntilBirthdays qui prend en param\'e8tre un tableau de dates\par
de naissance au format "YYYY-MM-DD" et qui retourne un tableau contenant le nombre\par
de jours restant avant le prochain anniversaire de chaque personne.\par
\cf0\strike0\par
\par
\highlight3 PART2 (enonces_dom)\par
\cf2\highlight0\strike 1. Cr\'e9ez une page HTML avec un titre "Exercice JavaScript avanc\'e9" \par
Dans la page, cr\'e9ez un formulaire avec les champs suivants : nom, pr\'e9nom, \'e2ge, email et adresse\par
Ajoutez un bouton de soumission "Envoyer"\par
Lorsque l'utilisateur soumet le formulaire, v\'e9rifiez que tous les champs sont remplis \par
et affichez un message d'erreur si l'un des champs est vide\par
Si tous les champs sont remplis, affichez un message de bienvenue avec \par
le nom et le pr\'e9nom de l'utilisateur dans une bo\'eete de dialogue\par
\cf0\strike0\par
\cf4\b 2. Cr\'e9ez une page HTML avec un titre "Exercice JavaScript : Calculatrice"\par
Dans la page, cr\'e9ez un formulaire avec les champs suivants : nombre 1, nombre 2 et op\'e9ration \par
(s\'e9lection avec les options "addition", "soustraction", "multiplication" et "division")\par
Ajoutez un bouton de soumission "Calculer"\par
Lorsque l'utilisateur soumet le formulaire, effectuez le calcul s\'e9lectionn\'e9 \par
avec les deux nombres et affichez le r\'e9sultat dans une bo\'eete de dialogue\par
\par
3. Cr\'e9ez une page HTML avec un titre "Exercice JavaScript : Changement de couleur de fond"\par
Dans la page, cr\'e9ez un formulaire avec les champs suivants : couleur de fond \par
(s\'e9lection avec les options "rouge", "vert", "bleu" et "jaune") et texte (texte libre)\par
Ajoutez un bouton de soumission "Changer". Lorsque l'utilisateur soumet le formulaire, \par
changez la couleur de fond de la page en fonction de la couleur s\'e9lectionn\'e9e et affichez \par
le texte saisi dans un \'e9l\'e9ment de type paragraphe\par
\par
4. Cr\'e9ez une page HTML avec un titre "Exercice JavaScript : Calcul de la moyenne"\par
Dans la page, cr\'e9ez un formulaire avec un champ de saisie de note et un bouton "Ajouter"\par
Cr\'e9ez un bouton "Calculer" qui permettra de calculer la moyenne des notes ajout\'e9es\par
Lorsque l'utilisateur soumet le formulaire, ajoutez la note saisie \'e0 un tableau en JavaScript\par
Lorsque l'utilisateur clique sur le bouton "Calculer", calculez la moyenne des notes du tableau \par
et affichez le r\'e9sultat dans un \'e9l\'e9ment de type paragraphe\par
\par
5. Cr\'e9ez une page HTML avec un titre "Exercice JavaScript : Conversion de temp\'e9rature"\par
Dans la page, cr\'e9ez un formulaire avec un champ de saisie de temp\'e9rature en degr\'e9s Celsius\par
et deux boutons radio pour choisir l'unit\'e9 de destination (Fahrenheit ou Kelvin)\par
Cr\'e9ez une fonction en JavaScript qui prend en entr\'e9e une temp\'e9rature en degr\'e9s Celsius\par
et une unit\'e9 de destination (Fahrenheit ou Kelvin) et qui renvoie la temp\'e9rature convertie\par
Lorsque l'utilisateur soumet le formulaire, utilisez la fonction de conversion\par
pour afficher la temp\'e9rature convertie dans un \'e9l\'e9ment de type paragraphe\par
\cf0\b0\par
\par
\highlight3 PART3 (enonces_fonctions)\par
\cf4\highlight0\b 1. Ecrire une fonction max qui prend deux nombres en param\'e8tre et retourne le plus grand des deux.\par
\par
2. Ecrire une fonction hello qui prend une cha\'eene de caract\'e8res en param\'e8tre et affiche "Bonjour, \par
[nom] !" o\'f9 [nom] est la cha\'eene de caract\'e8res pass\'e9e en param\'e8tre.\par
\par
3. Ecrire une fonction isMultiple qui prend deux nombres en param\'e8tre \par
et retourne true si le premier est un multiple du second, false sinon.\par
\par
4. Ecrire une fonction getDayOfWeek qui prend un nombre en param\'e8tre (de 1 \'e0 7)\par
et retourne le jour de la semaine correspondant (de lundi \'e0 dimanche). \par
Si le nombre pass\'e9 en param\'e8tre n'est pas compris entre 1 et 7, la fonction retourne null.\par
\par
5. Ecrire une fonction isPalindrome qui prend une cha\'eene de caract\'e8res en param\'e8tre\par
et retourne true si la cha\'eene est un palindrome, false sinon. \par
Un palindrome est une cha\'eene de caract\'e8res qui se lit de la m\'eame mani\'e8re dans les deux sens.\par
\par
6. Ecrire une fonction getPrimeFactors qui prend un nombre entier positif en param\'e8tre\par
et retourne un tableau contenant tous ses facteurs premiers.\par
\par
7. Ecrire une fonction sortByLength qui prend un tableau de cha\'eenes de caract\'e8res en param\'e8tre\par
et retourne un nouveau tableau contenant les cha\'eenes tri\'e9es par longueur croissante. \par
Si deux cha\'eenes ont la m\'eame longueur, elles doivent \'eatre tri\'e9es par ordre alphab\'e9tique.\par
\cf0\b0\par
\par
\highlight3 PART4 (enonces_objets)\par
\cf4\highlight0\b 1. Ecrire une classe Person qui repr\'e9sente une personne avec les propri\'e9t\'e9s firstName (pr\'e9nom)\par
et lastName (nom de famille). La classe doit avoir un constructeur qui permet de d\'e9finir\par
ces propri\'e9t\'e9s lors de la cr\'e9ation de l'objet. \par
Elle doit \'e9galement avoir des getters et setters pour ces propri\'e9t\'e9s.\par
\par
2. Ecrire une classe Employee qui repr\'e9sente un employ\'e9 avec les propri\'e9t\'e9s id (identifiant),\par
name (nom) et position (poste). La classe doit avoir un constructeur qui prend ces trois propri\'e9t\'e9s\par
en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet.\par
Elle doit \'e9galement avoir un getter id qui retourne l'identifiant de l'employ\'e9,\par
et un setter id qui met \'e0 jour l'identifiant de l'employ\'e9.\par
Enfin, la classe doit avoir une m\'e9thode promote qui met \'e0 jour le poste de l'employ\'e9 en ajoutant\par
"Manager" au d\'e9but de la cha\'eene.\par
\par
3. Ecrire une classe Account qui repr\'e9sente un compte bancaire avec les propri\'e9t\'e9s name (nom),\par
balance (solde) et currency (devise). La classe doit avoir un constructeur qui prend\par
ces trois propri\'e9t\'e9s en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet.\par
Elle doit \'e9galement avoir un getter balance qui retourne le solde du compte,\par
et un setter balance qui met \'e0 jour le solde du compte. Enfin,\par
la classe doit avoir une m\'e9thode deposit qui permet de d\'e9poser de l'argent sur le compte,\par
et une m\'e9thode withdraw qui permet de retirer de l'argent du compte.\par
\par
4. Ecrire une classe Product qui repr\'e9sente un produit avec les propri\'e9t\'e9s name (nom),\par
price (prix) et quantity (quantit\'e9). La classe doit avoir un constructeur qui prend\par
ces trois propri\'e9t\'e9s en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet.\par
Elle doit \'e9galement avoir un getter total qui retourne le prix total du produit (prix * quantit\'e9).\par
La classe doit en outre avoir une m\'e9thode add qui permet d'ajouter une certaine quantit\'e9 de produits\par
au stock, et une m\'e9thode remove qui permet de retirer une certaine quantit\'e9 de produits du stock.\par
Ces deux m\'e9thodes doivent v\'e9rifier que la quantit\'e9 de produits \'e0 ajouter ou retirer est positive,\par
et afficher un message d'erreur dans le cas contraire.\par
\par
5. Ecrire une classe People qui repr\'e9sente une personne avec les propri\'e9t\'e9s firstName (pr\'e9nom),\par
lastName (nom) et age (\'e2ge). La classe doit avoir un constructeur qui prend ces trois propri\'e9t\'e9s\par
en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet. Elle doit \'e9galement avoir un getter fullName\par
qui retourne le nom complet de la personne (pr\'e9nom et nom s\'e9par\'e9s par un espace).\par
La classe doit en outre avoir une m\'e9thode isAdult qui retourne true si la personne a plus de 18 ans,\par
et false sinon.\par
6. Ecrire une classe Car qui repr\'e9sente une voiture avec les propri\'e9t\'e9s make (marque),\par
model (mod\'e8le) et year (ann\'e9e). La classe doit avoir un constructeur qui prend ces trois propri\'e9t\'e9s\par
en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet. Elle doit \'e9galement avoir un getter\par
description qui retourne une cha\'eene de caract\'e8res contenant la marque,\par
le mod\'e8le et l'ann\'e9e de la voiture sous la forme "Marque Mod\'e8le (Ann\'e9e)".\par
La classe doit en outre avoir une m\'e9thode start qui affiche "Le moteur de la Marque Mod\'e8le (Ann\'e9e)\par
est en marche." dans la console, et une m\'e9thode stop qui affiche \par
"Le moteur de la Marque Mod\'e8le (Ann\'e9e) est arr\'eat\'e9." dans la console.\par
\par
7. Ecrire une classe Event qui repr\'e9sente un \'e9v\'e9nement avec les propri\'e9t\'e9s name (nom),\par
date (date) et location (emplacement). La classe doit avoir un constructeur qui prend\par
ces trois propri\'e9t\'e9s en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet.\par
Elle doit \'e9galement avoir un getter formattedDate qui retourne la date de l'\'e9v\'e9nement au format\par
"JJ/MM/AAAA".La classe doit en outre avoir une m\'e9thode register qui prend en param\'e8tre un nom\par
et un pr\'e9nom, et qui ajoute ces informations \'e0 un tableau attendees contenant les noms et pr\'e9noms\par
des personnes inscrites \'e0 l'\'e9v\'e9nement. La classe doit \'e9galement avoir une m\'e9thode unregister\par
qui prend en param\'e8tre un nom et un pr\'e9nom, et qui retire ces informations du tableau attendees.\par
Ces deux m\'e9thodes doivent v\'e9rifier que le nom et le pr\'e9nom sont valides (c'est-\'e0-dire non vides),\par
et afficher un message d'erreur dans le cas contraire.\par
\par
8. Ecrire une classe Invoice qui repr\'e9sente une facture avec les propri\'e9t\'e9s id (identifiant),\par
customer (client) et items (articles). La classe doit avoir un constructeur qui prend ces trois\par
propri\'e9t\'e9s en param\'e8tre et initialise les propri\'e9t\'e9s de l'objet. items est un tableau d'objets,\par
chacun repr\'e9sentant un article avec les propri\'e9t\'e9s name (nom), quantity (quantit\'e9) et price (prix).\par
La classe doit avoir un getter total qui retourne le prix total de la facture \par
(somme du prix de chaque article multipli\'e9 par sa quantit\'e9). La classe doit en outre avoir\par
une m\'e9thode addItem qui permet d'ajouter un article \'e0 la facture, et une m\'e9thode removeItem\par
qui permet de retirer un article de la facture. Ces deux m\'e9thodes doivent v\'e9rifier\par
que l'article \'e0 ajouter ou retirer existe dans la facture, et afficher un message d'erreur\par
dans le cas contraire.\par
\cf0\b0\par
\par
\highlight3 PART5 (enonces_structures_controle)\par
\cf4\highlight0\b 1. Ecrire un script qui affiche les nombres de 1 \'e0 10 \'e0 l'aide d'une boucle for.\par
\par
2. Ecrire un script qui demande \'e0 l'utilisateur de saisir un nombre et affiche \par
"positif" si le nombre est positif, "n\'e9gatif" s'il est n\'e9gatif et "nul" s'il est \'e9gal \'e0 z\'e9ro\par
\'e0 l'aide d'une structure if-else.\par
\par
3. Ecrire un script qui demande \'e0 l'utilisateur de saisir un jour de la semaine\par
et affiche le jour suivant \'e0 l'aide d'une structure switch-case.\par
\par
4. Ecrire un script qui affiche les nombres de 1 \'e0 100 \'e0 l'aide d'une boucle while.\par
\par
5. Ecrire un script qui demande \'e0 l'utilisateur de saisir un nombre\par
et affiche "pair" si le nombre est pair ou "impair" s'il est impair\par
\'e0 l'aide d'une structure if-else.\par
\par
6. Ecrire un script qui demande \'e0 l'utilisateur de saisir un nombre compris entre 1 et 10,\par
et affiche la table de multiplication de ce nombre jusqu'\'e0 10.\par
Si l'utilisateur saisit un nombre en dehors de cette plage,\par
le script demande \'e0 l'utilisateur de saisir \'e0 nouveau un nombre jusqu'\'e0 ce qu'il saisisse\par
un nombre valide.\par
\cf0\b0\par
\par
\highlight3 PART6 (enonces_timers)\par
\cf4\highlight0\b 1. Ecrire une fonction countdown qui affiche un compte \'e0 rebours de 10 \'e0 0 toutes les secondes,\par
puis affiche "Lancement !" une fois arriv\'e9e \'e0 0.\par
\par
2. Ecrire une fonction stopwatch qui affiche le temps \'e9coul\'e9 depuis le lancement du chronom\'e8tre\par
toutes les secondes. La fonction doit prendre en param\'e8tre une fonction callback\par
qui sera appel\'e9e avec le temps \'e9coul\'e9 en secondes lorsque le chronom\'e8tre est arr\'eat\'e9.\par
La fonction doit \'eatre ex\'e9cut\'e9e en appuyant sur un bouton et doit s'arr\'eater en appuyant \'e0 nouveau\par
sur le m\'eame bouton.\par
\par
3. Ecrire une fonction alarm qui affiche un message \'e0 une heure donn\'e9e en param\'e8tre.\par
\cf0\b0\par
\par
\highlight3 PART7 (enonces_async)\par
\cf4\highlight0\b 1. Ecrire une fonction loadJson qui prend en param\'e8tre une URL et qui charge un fichier JSON\par
\'e0 cette URL. La fonction doit retourner une promesse qui r\'e9sout avec le contenu du fichier JSON\par
lorsque celui-ci a \'e9t\'e9 charg\'e9, ou qui rejette avec l'erreur lorsque le chargement a \'e9chou\'e9.\par
NB : La fonction XMLHttpRequest.open ouvre une requ\'eate HTTP, la fonction XMLHttpRequest.\par
send envoie la requ\'eate et la fonction XMLHttpRequest.\par
responseType d\'e9finit le type de donn\'e9es attendu dans la r\'e9ponse.\par
Les propri\'e9t\'e9s XMLHttpRequest.onload et XMLHttpRequest.onerror sont des \'e9v\'e9nements\par
qui se d\'e9clenchent respectivement en cas de succ\'e8s ou d'\'e9chec de la requ\'eate.\par
Une promesse est un objet qui repr\'e9sente une valeur qui peut \'eatre disponible maintenant,\par
dans le futur, ou jamais. Lorsque la valeur est disponible, la promesse est "r\'e9solue".\par
\par
2. Ecrire une fonction getUsers qui affiche la liste des utilisateurs de l'API JSONPlaceholder\par
dans une liste HTML.\par
\cf0\b0\par
\par
\par
\par
}
 